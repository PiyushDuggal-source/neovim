local icons = require("config.icons.icons")

local headers = {
  {
    [[                                                 ]],
    [[                               __                ]],
    [[  ___     ___    ___   __  __ /\_\    ___ ___    ]],
    [[ / _ `\  / __`\ / __`\/\ \/\ \\/\ \  / __` __`\  ]],
    [[/\ \/\ \/\  __//\ \_\ \ \ \_/ |\ \ \/\ \/\ \/\ \ ]],
    [[\ \_\ \_\ \____\ \____/\ \___/  \ \_\ \_\ \_\ \_\]],
    [[ \/_/\/_/\/____/\/___/  \/__/    \/_/\/_/\/_/\/_/]],
    [[                                                 ]],
  },
  {
    "                                                     ",
    "  ███╗   ██╗███████╗ ██████╗ ██╗   ██╗██╗███╗   ███╗ ",
    "  ████╗  ██║██╔════╝██╔═══██╗██║   ██║██║████╗ ████║ ",
    "  ██╔██╗ ██║█████╗  ██║   ██║██║   ██║██║██╔████╔██║ ",
    "  ██║╚██╗██║██╔══╝  ██║   ██║╚██╗ ██╔╝██║██║╚██╔╝██║ ",
    "  ██║ ╚████║███████╗╚██████╔╝ ╚████╔╝ ██║██║ ╚═╝ ██║ ",
    "  ╚═╝  ╚═══╝╚══════╝ ╚═════╝   ╚═══╝  ╚═╝╚═╝     ╚═╝ ",
    "                                                     ",
  },
  -- {
  --   -- "                                        ",
  -- "                                        ",
  -- "                                        ",
  -- "                                        ",
  -- "                                        ",
  -- "                                        ",
  -- "         //                 /*          ",
  -- "      ,(/(//,               *###        ",
  -- "    ((((((////.             /####%*     ",
  -- " ,/(((((((/////*            /########   ",
  -- "/*///((((((//////.          *#########/ ",
  -- "//////((((((((((((/         *#########/.",
  -- "////////((((((((((((*       *#########/.",
  -- "/////////(/(((((((((((      *#########(.",
  -- "//////////.,((((((((((/(    *#########(.",
  -- "//////////.  /(((((((((((,  *#########(.",
  -- "(////////(.    (((((((((((( *#########(.",
  -- "(////////(.     ,#((((((((((##########(.",
  -- "((//////((.       /#((((((((##%%######(.",
  -- "((((((((((.         #(((((((####%%##%#(.",
  -- "((((((((((.          ,((((((#####%%%%%(.",
  -- " .#(((((((.            (((((#######%%   ",
  -- "    /(((((.             .(((#%##%%/*    ",
  -- "      ,(((.               /(#%%#        ",
  -- "        ./.                 #*          ",
  -- "                                        ",
  -- "                                        ",
  -- "                                        ",
  -- "                                        ",
  -- "                                        ",
  -- },
  {
    [[███    ██ ███████  ██████  ██    ██ ██ ███    ███]],
    [[████   ██ ██      ██    ██ ██    ██ ██ ████  ████]],
    [[██ ██  ██ █████   ██    ██ ██    ██ ██ ██ ████ ██]],
    [[██  ██ ██ ██      ██    ██  ██  ██  ██ ██  ██  ██]],
    [[██   ████ ███████  ██████    ████   ██ ██      ██]],
  },
  {
    [[ _______             ____   ____.__         ]],
    [[ \      \   ____  ___\   \ /   /|__| _____  ]],
    [[ /   |   \_/ __ \/  _ \   Y   / |  |/     \ ]],
    [[/    |    \  ___(  <_> )     /  |  |  Y Y  \]],
    [[\____|__  /\___  >____/ \___/   |__|__|_|  /]],
    [[        \/     \/                        \/ ]],
  },
  {
    [[]],
    [[       ]],
    [[      ████ ██████           █████ ██]],
    [[     ███████████             █████           ]],
    [[    █████████  ███████████████████ ███   ███████████]],
    [[   █████████   ███    █████████████ █████ ██████████████]],
    [[  █████████  ██████████ █████████ █████ █████ ████ █████]],
    [[ ███████████ ███    ███ █████████ █████ █████ ████ █████]],
    [[██████  █████████████████████ ████ █████ █████ ████ ██████]],
  },
  -- {
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░▓██▓▓▓▓▓▒▓███▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░▒▓█████████████▓█▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒░░░░░░░░░░▓▓███████████████▓██▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒░░░░░░░░███████████▓▓▓▓▓▓▓▓▓▒▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▓██████████▓▓▓▓▓▓▓▒▒▒░▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░██████████▓▓▓▓▓▓▓▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░████████▓▓▓▓▓███▓▓▒▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓▒░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▓███▓███▓▓▓▓▓▓▓█▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▒░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓██▓▓▓▓█▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒█████▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒█████▓▓▓▓▓▓▓▓▓▓▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒███▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░█▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▓██▓▓▓▓▓▓▓▓▓▓▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓██▓▒▒▓▓▓▓▓▓▓▓▒▒▒░▒▓▒░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓█████▒▒▒▒▒▓▓▓▓▓▒░░░▓▓▓▓▒░░░░░░░░░░░░░░░░░░░░▒▒▒▒░▒▒▒▒▒▒▒',
  --   '▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓██████████▓▒▒▒▒▓▓█▓▒░░░░█████▓▓▒▒░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒',
  --   '▓▒▒▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓████████████████████▒▒▓█████▓▓▒░▒███████▓▓▓▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░',
  --   '▓▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒██████████████████████▓▒▒▓▓███▓▓░▒▓█████████▓▓▓▓▓▒▒▒░░░░░░░░░░░░░░░░░░░░',
  --   '▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓███████████████████████▒▒▓▓███▓▓░▒█████████████▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░',
  --   '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒████████████████████████▒▒▓███▓▓▓░▓██████████████████▓░░░░░░░░░░░░░░░░░░░',
  --   '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████████████▓▒████▓▓▓▒███████████████████▓░░░░░░░░░░░░░░░░░░░',
  --   '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████████████████████████▒█████▓▓▒████████████████████░░░░░░░░░░░░░░░░░░░',
  --   '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████████████████████▓▓█████████████████████░░░░░░░░░░░░░░░░░░░',
  --   '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████████████████████▓▓█████████████████████░░░░░░░░░░░░░░░░░░░',
  --   '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█████████████████████████████████▓██████████████████████░░░░░░░░░░░░░░░░░░░',
  --   '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████████████████████████████████████████████▒░░░░░░░░░░░░░░░░░░',
  --   '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████████████████████████████████████████████▓░░░░░░░░░░░░░░░░░░',
  --   '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█████████████████████████████████████████████████████████░░░░░░░░░░░░░░░░░░',
  --
  -- },

  {
    "                     .:::!~!!!!!:.",
    "                  .xUHWH!! !!?M88WHX:.",
    "                .X*#M@$!!  !X!M$$$$$$WWx:.",
    "               :!!!!!!?H! :!$!$$$$$$$$$$8X:",
    "              !!~  ~:~!! :~!$!#$$$$$$$$$$8X:",
    "             :!~::!H!<   ~.U$X!?R$$$$$$$$MM!",
    "             ~!~!!!!~~ .:XW$$$U!!?$$$$$$RMM!",
    '               !:~~~ .:!M"T#$$$$WX??#MRRMMM!',
    '               ~?WuxiW*`   `"#$$$$8!!!!??!!!',
    '             :X- M$$$$       `"T#$T~!8$WUXU~',
    "            :%`  ~#$$$m:        ~!~ ?$$$$$$",
    '          :!`.-   ~T$$$$8xx.  .xWW- ~""##*"',
    ".....   -~~:<` !    ~?T#$$@@W@*?$$      /`",
    'W$@@M!!! .!~~ !!     .:XUW$W!~ `"~:    :',
    '#"~~`.:x%`!!  !H:   !WM$$$$Ti.: .!WUn+!`',
    ':::~:!!`:X~ .: ?H.!u "$$$B$$$!W:U!T$$M~',
    '.~~   :X@!.-~   ?@WTWo("*$$$W$TH$! `',
    'Wi.~!X$?!-~   :: ?$$$B$Wu("**$RM!',
    "$R@i.~~ !    ::   ~$$$$$B$$en:``",
    '?MXT@Wx.~   ::     ~"##*$$$$M',
  },
  {

    [[          ▀████▀▄▄              ▄█ ]],
    [[            █▀    ▀▀▄▄▄▄▄    ▄▄▀▀█ ]],
    [[    ▄        █          ▀▀▀▀▄  ▄▀  ]],
    [[   ▄▀ ▀▄      ▀▄              ▀▄▀  ]],
    [[  ▄▀    █     █▀   ▄█▀▄      ▄█    ]],
    [[  ▀▄     ▀▄  █     ▀██▀     ██▄█   ]],
    [[   ▀▄    ▄▀ █   ▄██▄   ▄  ▄  ▀▀ █  ]],
    [[    █  ▄▀  █    ▀██▀    ▀▀ ▀▀  ▄▀  ]],
    [[   █   █  █      ▄▄           ▄▀   ]],
  },
}
local footer = function()
  local stats = require("lazy").stats()
  local ms = (math.floor(stats.startuptime * 100 + 0.5) / 100)
  return {
    "⚡ Neovim loaded "
      .. stats.loaded
      .. "/"
      .. stats.count
      .. " plugins in "
      .. ms
      .. "ms"
      .. "  v"
      .. vim.version().major
      .. "."
      .. vim.version().minor
      .. "."
      .. vim.version().patch
      .. "  ",
  }
end

return {
  "goolord/alpha-nvim",
  opts = function()
    local dashboard = require("alpha.themes.dashboard")
    dashboard.section.header.val = headers[math.random(7)]
    dashboard.section.buttons.val = {
      dashboard.button("b", " " .. " Sessions", ":SLoad<CR>"),
      -- dashboard.button("T", ' ' .. " New Terminal", ":ToggleTerm size=40 dir=~/Piyush direction=horizontal<CR>"),
      dashboard.button("p", " " .. " Find project", ":lua require('telescope').extensions.projects.projects()<CR>"),
      dashboard.button("T", " " .. " New Terminal", ":!kitty<CR>"),
      dashboard.button("r", "󰄉 " .. " Recent files", ":Telescope oldfiles <CR>"),
      dashboard.button("f", " " .. " Find file", ":Telescope find_files <CR>"),
      dashboard.button("e", " " .. " New file", ":ene <BAR> startinsert <CR>"),
      -- dashboard.button("t", " " .. " Find text", ":Telescope live_grep <CR>"),
      dashboard.button("c", " " .. " Neovim Config", ":e ~/.config/nvim/init.lua <CR>"),
      dashboard.button("t", icons.ui.Settings .. "  Kitty Config", ":e ~/.config/kitty/kitty.conf <CR>"),
      dashboard.button("q", " " .. " Quit", ":qa<CR>"),
    }
    dashboard.section.footer.val = footer()
  end,
}
